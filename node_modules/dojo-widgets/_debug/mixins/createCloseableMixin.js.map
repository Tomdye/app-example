{"version":3,"file":"createCloseableMixin.js","sourceRoot":"","sources":["createCloseableMixin.ts"],"names":[],"mappings":";;;;;;;;;IAEA,+BAAiE,oCAAoC,CAAC,CAAA;IAEtG,wBAAoB,mBAAmB,CAAC,CAAA;IAqBxC,IAAM,oBAAoB,GAA0B,wBAAc;SAChE,KAAK,CAAC;QACN,KAAK,EAAE;YACN,KAAK;gBACJ,IAAM,SAAS,GAA8B,IAAI,CAAC;gBAClD,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC/B,IAAI,WAAS,GAAG,KAAK,CAAC;oBACtB,SAAS,CAAC,IAAI,CAAC;wBACd,IAAI,EAAE,OAAO;wBACb,MAAM,EAAE,SAAS;wBACjB,cAAc;4BACb,WAAS,GAAG,IAAI,CAAC;wBAClB,CAAC;qBACD,CAAC,CAAC;oBACH,MAAM,CAAC,WAAS,GAAG,iBAAO,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;gBACjE,CAAC;gBACD,MAAM,CAAC,iBAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC;SACD;KACD,CAAC,CAAC;IAEJ;sBAAe,oBAAoB,CAAC","sourcesContent":["import { ComposeFactory } from 'dojo-compose/compose';\nimport { EventedListener, TargettedEventObject } from 'dojo-compose/mixins/createEvented';\nimport createStateful, { Stateful, State, StatefulOptions } from 'dojo-compose/mixins/createStateful';\nimport { Handle } from 'dojo-core/interfaces';\nimport Promise from 'dojo-core/Promise';\n\nexport interface CloseableState extends State {\n\tcloseable?: boolean;\n}\n\nexport interface CloseEvent extends TargettedEventObject {\n\ttarget: Closeable<CloseableState>;\n\ttype: 'close';\n\tpreventDefault(): void;\n}\n\nexport interface Closeable<S extends CloseableState> extends Stateful<S> {\n\tclose(): Promise<boolean>;\n\n\ton(type: 'close', listener: EventedListener<CloseEvent>): Handle;\n\ton(type: string, listener: EventedListener<TargettedEventObject>): Handle;\n}\n\nexport interface CloseableMixinFactory extends ComposeFactory<Closeable<CloseableState>, StatefulOptions<CloseableState>> { }\n\nconst createCloseableMixin: CloseableMixinFactory = createStateful\n\t.mixin({\n\t\tmixin: {\n\t\t\tclose(): Promise<boolean> {\n\t\t\t\tconst closeable: Closeable<CloseableState> = this;\n\t\t\t\tif (closeable.state.closeable) {\n\t\t\t\t\tlet prevented = false;\n\t\t\t\t\tcloseable.emit({\n\t\t\t\t\t\ttype: 'close',\n\t\t\t\t\t\ttarget: closeable,\n\t\t\t\t\t\tpreventDefault() {\n\t\t\t\t\t\t\tprevented = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treturn prevented ? Promise.resolve(false) : closeable.destroy();\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve(false);\n\t\t\t}\n\t\t}\n\t});\n\nexport default createCloseableMixin;\n"]}